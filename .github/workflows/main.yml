
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  GUM_OPTIONS: '--enable-gumpp --enable-gumjs --with-devkits=gum,gumjs'

jobs:
  gir:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install \
              gobject-introspection \
              libdwarf-dev \
              libelf-dev \
              libgirepository1.0-dev \
              libglib2.0-dev \
              libjson-glib-dev \
              libsoup-3.0-dev \
              libsqlite3-dev \
              libunwind-dev \
              ninja-build
      - name: Build
        run: |
          ./configure \
              --enable-shared \
              --without-prebuilds=toolchain,sdk \
              --disable-tests
          make
      - name: Upload GObject introspection data
        uses: actions/upload-artifact@v4
        with:
          name: gum-gir
          path: |
            build/gum/Gum-1.0.gir
            build/gum/Gum-1.0.typelib






  mobile:
    strategy:
      matrix:
        id:
          - android-arm
          - android-arm64
      fail-fast: false
    runs-on: ${{ startsWith(matrix.id, 'ios-') && 'macos-latest' || 'ubuntu-latest' }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build
        run: |
          export FRIDA_OBJC_BRIDGE=disabled
          export FRIDA_SWIFT_BRIDGE=disabled
          export FRIDA_JAILBREAK=disabled
          export FRIDA_V8=disabled
          ./configure --host=${{ matrix.id }} ${{ env.GUM_OPTIONS }}
          make
      - name: Upload Gum devkit
        uses: actions/upload-artifact@v4
        with:
          name: gum-devkit-${{ matrix.id }}
          path: build/gum/devkit/
      - name: Upload GumJS devkit
        uses: actions/upload-artifact@v4
        with:
          name: gumjs-devkit-${{ matrix.id }}
          path: build/bindings/gumjs/devkit/
      - name: Package tests
        run: tar -C build/tests -czf /tmp/runner.tar.gz gum-tests data/
      - name: Test on Corellium iOS device
        if: matrix.id == 'ios-arm64'
        continue-on-error: true
        uses: frida/corellium-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          gateway: corellium.frida.re
          device: ios-12.5.7-arm64
          upload: /tmp/runner.tar.gz
          run: |
            cd /usr/local
            rm -rf opt/frida
            mkdir -p opt/frida
            cd opt/frida
            tar xf $ASSET_PATH
            ./gum-tests
      - name: Test on Corellium Android device
        if: matrix.id == 'android-arm64'
        continue-on-error: true
        uses: frida/corellium-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          gateway: corellium.frida.re
          device: android-8.1.0-arm64
          upload: /tmp/runner.tar.gz
          run: |
            cd /data/local/tmp
            tar xf $ASSET_PATH
            ./gum-tests

  qnx-armeabi:
    runs-on: ubuntu-latest
    container: ghcr.io/frida/qnx-tools:latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build
        run: |
          CFLAGS="--sysroot=$QNX_TARGET/armle-v7" \
              ./configure --host=arm-unknown-nto-qnx6.5.0eabi ${{ env.GUM_OPTIONS }}
          make
      - name: Upload Gum devkit
        uses: actions/upload-artifact@v4
        with:
          name: gum-devkit-qnx-armeabi
          path: build/gum/devkit/
      - name: Upload GumJS devkit
        uses: actions/upload-artifact@v4
        with:
          name: gumjs-devkit-qnx-armeabi
          path: build/bindings/gumjs/devkit/
      - name: Test
        run: |
          tar -C build/tests -cf /tmp/runner.tar gum-tests data/
          /opt/sabrelite/run.sh /tmp/runner.tar /opt/frida/gum-tests
